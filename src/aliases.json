{
  "a": "!git add . && git status",
  "aa": "!git add . && git add -u . && git status",
  "abandon": "reset --hard",
  "ac": "!git add . && git commit",
  "acm": "!git add . && git commit -m",
  "addconflicted": "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`",
  "alias": "!git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\   => \\2/' | sort",
  "amm": "commit --amend",
  "amend": "commit -a --amend",
  "assume": "update-index --assume-unchanged",
  "b": "rev-parse --abbrev-ref HEAD",
  "bclean": "!f() { git branch --merged ${1-master} | grep -v \" ${1-master}$\" | xargs -r git branch -d; }; `f`",
  "bdone": "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; `f`",
  "br": "branch",
  "bra": "branch --all",
  "brr": "branch --remote",
  "cm": "!git add -A && git commit -m",
  "cmd": "commit -a -m \"auto commit by git-vcs-alias\"",
  "co": "checkout",
  "cob": "checkout -b",
  "count": "!git log --all --oneline | wc -l",
  "cf": "config",
  "cfl": "config --list",
  "d": "diff",
  "dc": "diff --cached",
  "done": "!f() { git branch | grep \"$1\" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; `f`",
  "editconflicted": "!f() {git ls-files --unmerged | cut -f2 | sort -u ; }; $EDITOR `f`",
  "gra": "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In \"$1\" | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; `f`",
  "graph": "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative",
  "l": "log --graph --all --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset' --decorate --date=short",
  "lg": "log --color --graph --pretty=format:'%C(bold white)%h%Creset -%C(bold green)%d%Creset %s %C(bold green)(%cr)%Creset %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative",
  "ll": "log --stat --abbrev-commit",
  "llg": "log --color --graph --pretty=format:'%C(bold white)%H %d%Creset%n%s%n%+b%C(bold blue)%an <%ae>%Creset %C(bold green)%cr (%ci)' --abbrev-commit",
  "lline": "log --oneline -10",
  "master": "checkout master",
  "m": "merge",
  "mq": "merge qa",
  "mm": "merge master",
  "path": "rev-parse --show-toplevel",
  "pl": "pull origin",
  "plm": "pull origin master",
  "plq": "pull origin qa",
  "po": "push origin",
  "pom": "push origin master",
  "poq": "push origin qa",
  "qa": "checkout qa",
  "s": "status -sb",
  "save": "!git add -A && git commit -m \"SAVEPOINT\"",
  "st": "status",
  "sts": "status -s",
  "undo": "reset HEAD~1 --mixed",
  "unassume": "update-index --no-assume-unchanged",
  "up": "!git pull --rebase --prune $@ && git submodule update --init --recursive",
  "wip": "commit -am \"WIP\"",
  "wipe": "!git add -A && git commit -qm \"WIPE SAVEPOINT\" && git reset HEAD~1 --hard"
}